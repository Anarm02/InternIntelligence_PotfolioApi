// <auto-generated />
using System;
using DataAccessLayer.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccessLayer.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250121134839_ProjectImageAdded")]
    partial class ProjectImageAdded
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EntityLayer.Entities.Achievement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateAchieved")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Achievements");

                    b.HasData(
                        new
                        {
                            Id = new Guid("58ea2db5-d993-4de8-a045-48208c762a2c"),
                            CreatedAt = new DateTime(2025, 1, 21, 13, 48, 36, 899, DateTimeKind.Utc).AddTicks(2020),
                            DateAchieved = new DateTime(2024, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Awarded for outstanding performance and dedication to the company.",
                            IsDeleted = false,
                            Title = "Employee of the Month"
                        },
                        new
                        {
                            Id = new Guid("5844eb7d-b9d4-445a-8716-7f2199d3b0a9"),
                            CreatedAt = new DateTime(2025, 1, 21, 13, 48, 36, 899, DateTimeKind.Utc).AddTicks(2029),
                            DateAchieved = new DateTime(2023, 11, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Successfully completed the C# certification exam with high distinction.",
                            IsDeleted = false,
                            Title = "Certified C# Developer"
                        });
                });

            modelBuilder.Entity("EntityLayer.Entities.Project", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ImageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ProjectUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a453f4eb-a9cf-4d59-87c0-31e750223fa3"),
                            CreatedAt = new DateTime(2025, 1, 21, 13, 48, 36, 899, DateTimeKind.Utc).AddTicks(3567),
                            Description = "A fully responsive e-commerce platform with payment integration and user authentication.",
                            IsDeleted = false,
                            ProjectUrl = "https://www.myecommerceproject.com",
                            Title = "E-Commerce Website"
                        },
                        new
                        {
                            Id = new Guid("1ccc79dd-f190-4aa9-9470-9cf4a84909c6"),
                            CreatedAt = new DateTime(2025, 1, 21, 13, 48, 36, 899, DateTimeKind.Utc).AddTicks(3568),
                            Description = "A web-based task management application to help teams collaborate effectively.",
                            IsDeleted = false,
                            ProjectUrl = "https://www.taskmanagerapp.com",
                            Title = "Task Management App"
                        });
                });

            modelBuilder.Entity("EntityLayer.Entities.ProjectImage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId")
                        .IsUnique();

                    b.ToTable("ProjectImages");
                });

            modelBuilder.Entity("EntityLayer.Entities.Skill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ProfiencyLevel")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Skills");

                    b.HasData(
                        new
                        {
                            Id = new Guid("de168aa8-cca9-4fce-8711-b49008c15632"),
                            CreatedAt = new DateTime(2025, 1, 21, 13, 48, 36, 899, DateTimeKind.Utc).AddTicks(4849),
                            IsDeleted = false,
                            Name = "C# Programming",
                            ProfiencyLevel = "Advanced"
                        },
                        new
                        {
                            Id = new Guid("1f470d7e-3763-4699-94dd-60b87d294c83"),
                            CreatedAt = new DateTime(2025, 1, 21, 13, 48, 36, 899, DateTimeKind.Utc).AddTicks(4851),
                            IsDeleted = false,
                            Name = "Web Development",
                            ProfiencyLevel = "Intermediate"
                        });
                });

            modelBuilder.Entity("EntityLayer.Entities.ProjectImage", b =>
                {
                    b.HasOne("EntityLayer.Entities.Project", "Project")
                        .WithOne("ProjectImage")
                        .HasForeignKey("EntityLayer.Entities.ProjectImage", "ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("EntityLayer.Entities.Project", b =>
                {
                    b.Navigation("ProjectImage");
                });
#pragma warning restore 612, 618
        }
    }
}
